@model List<AzureResourceViewer.Models.ResourceViewModel>
@{
    ViewData["Title"] = $"Resources in {ViewBag.ResourceGroupName}";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index", "ResourceGroups")">Resource Groups</a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">@ViewBag.ResourceGroupName</li>
                </ol>
            </nav>

            <h1 class="display-4">Resources in @ViewBag.ResourceGroupName</h1>
            <p class="lead">
                <strong>Resource Group:</strong> @ViewBag.ResourceGroupName<br>
                <strong>Subscription:</strong> <small class="text-muted">@ViewBag.SubscriptionId</small>
            </p>
            
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            @if (Model == null || !Model.Any())
            {
                <div class="alert alert-info" role="alert">
                    <h4 class="alert-heading">No Resources Found</h4>
                    <p>No resources were found in the resource group '<strong>@ViewBag.ResourceGroupName</strong>'. This could be because:</p>
                    <ul>
                        <li>The resource group is empty</li>
                        <li>You don't have sufficient permissions to view resources</li>
                        <li>The resources are being provisioned</li>
                    </ul>
                    <hr>
                    <p class="mb-0">
                        <a href="@Url.Action("Index", "ResourceGroups")" class="btn btn-primary">
                            <i class="fas fa-arrow-left"></i> Back to Resource Groups
                        </a>
                    </p>
                </div>
            }
            else
            {
                <div class="row mb-3">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Summary</h5>
                                <p class="card-text">
                                    <strong>Total Resources:</strong> @Model.Count<br>
                                    <strong>Resource Types:</strong> @Model.Select(r => r.Type).Distinct().Count()<br>
                                    <strong>Locations:</strong> @String.Join(", ", Model.Select(r => r.Location).Distinct())
                                </p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-12">
                        <a href="@Url.Action("Index", "ResourceGroups")" class="btn btn-secondary mb-3">
                            <i class="fas fa-arrow-left"></i> Back to Resource Groups
                        </a>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th scope="col">Name</th>
                                        <th scope="col">Type</th>
                                        <th scope="col">Location</th>
                                        <th scope="col">SKU</th>
                                        <th scope="col">Created Date</th>
                                        <th scope="col">Tags</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var resource in Model)
                                    {
                                        <tr>
                                            <td>
                                                <strong>@resource.Name</strong>
                                                <br>
                                                <small class="text-muted">@resource.ResourceId</small>
                                            </td>
                                            <td>
                                                <span class="badge bg-info">@resource.Type</span>
                                            </td>
                                            <td>@resource.Location</td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(resource.Sku) && resource.Sku != "N/A")
                                                {
                                                    <span class="badge bg-secondary">@resource.Sku</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">N/A</span>
                                                }
                                            </td>
                                            <td>
                                                @if (resource.CreatedDate.HasValue)
                                                {
                                                    @resource.CreatedDate.Value.ToString("yyyy-MM-dd HH:mm")
                                                }
                                                else
                                                {
                                                    <span class="text-muted">N/A</span>
                                                }
                                            </td>
                                            <td>
                                                @if (resource.Tags.Any())
                                                {
                                                    @foreach (var tag in resource.Tags.Take(2))
                                                    {
                                                        <span class="badge bg-light text-dark me-1" title="@tag.Key: @tag.Value">
                                                            @tag.Key: @tag.Value
                                                        </span>
                                                    }
                                                    @if (resource.Tags.Count > 2)
                                                    {
                                                        <span class="badge bg-light text-dark" title="@String.Join(", ", resource.Tags.Skip(2).Select(t => $"{t.Key}: {t.Value}"))">
                                                            +@(resource.Tags.Count - 2) more
                                                        </span>
                                                    }
                                                }
                                                else
                                                {
                                                    <span class="text-muted">None</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-dismiss alerts after 5 seconds
        setTimeout(function() {
            $('.alert').alert('close');
        }, 5000);

        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        });
    </script>
}
